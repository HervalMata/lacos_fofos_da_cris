Iniciando a aplicação
1 - Gerando Aplicação API Laravel
       - composer create-project --prefer-didt laravel/laravel=5.6.* lacos_fofos
       - alterar .env com dados do mysql
       - criar banco de daddos: create database lacos_fofos_da_cris
       - migrar tabelas base do laravel: php artisan migrate

2 - Personalizar nome da aplicação
       - php artisan app:name LacosFofos
       - criar pasta Models
       - mover Model User para pasta Models

Categorias
3 - Criando estrutura para categorias
       - Criar model, factory e resource para Category: php artisan make:model Models\Category -m -f -r

4 - Criando categorias para teste
       - php artisan migrate
       - Criar seeder: php artisan make:seeder CategoriesTableSeeder
       - php artisan db:seed

5 - Configurando controller resources
       - php artisan route:list

6 - Recuperando Categorias

7 - Criando categorias

8 - Validando Categorias
       - php artisan make:request CategoryRequest

9 - Atualizando categorias

10 - Excluindo Categorias

11 - Trabalhando com slugs
       - composer require cviebrock/eloquent-sluggable:4.5.*
       - php artisan migrate:refresh --seed

12 - Melhorando autocomplete da ide
       - composer require barryvdh/laravel-ide-helper --dev
       - php artisan ide-helper:generate
       - php artisan ide-helper:meta
       - php artisan ide-helper:models

13 - Route model bind

Produtos
14 - Criando model product
       - php artisan make:model Models\Product -m -f -r
       - php artisan make:seeder ProductsTableSeeder
       - php artisan migrate:refresh --seed

15 - Testando resource de produtos
       - php artisan make:request ProductRequest

16 - Hypermidia e paginação

17 = Criando relacionamento entre categoria e produtos
       - php artisan make:migration create_category_product_table --create
       - php artisan migrate

18 - Criando endpoints de relaciomamento entre produtos e categorias
       - php artisan make:controller Api/ProductCategoryController

19 - Atribuindo categorias a produtos
       - php artisan migrate:refresh --seed

20 - Listando categorias do produto

21 - Inserindo categorias num produto

22 - Validando inserção de categorias em produto
       - php artisan make:request ProductCategoryRequest

23 - Excluindo atribuição de categorias a um produto

24 - Iniciando com Api Resource
       - php artisan make:resource CategoryResource
       - php artisan make:resource ProductResource

25 - Criando serializador para relacionamento entre categoria e produto
       - php artisan make:resource ProductCategoryResource

Movimentação de estoque
26 - Iniciando Movimentação de estoque
       - php artisan make:model Models/ProductInput -f -m -r
       - php artisan make:seeder ProductInputsTableSeeder
       - php artisan migrate:refresh --seed

27 - Capturando dados com with
       - php artisan make:resource ProductInputResource

28 - Listando uma entrada de estoque

29 - Criando uma entrada de estoque
       - php artisan make:request ProductInputRequest

30 - Orientação por eventos

31 - Criando saida de estoque
       - php artisan make:model Models/ProductOutput -f -m -r
       - php artisan make:seeder ProductOutputsTableSeeder
       - php artisan migrate:refresh --seed

32 - Listando uma saida de estoque
       - php artisan make:resource ProductOutputResource

33 - Validando o estoque
       - php artisan make:rule HasStock
       - php artisan make:request ProductOutputRequest

Fotos dos produtos
34 - Iniciando modelagem de imagens dos produtos
       - php artisan make:model Models/ProductPhoto -f -m -r

35 - Upload falso de imagens
       - php artisan make:seeder ProductPhotosTableSeeder

36 - Criando registro de imagens

37 - Gerando nome da imagem

38 - Testando upload de imagens
       - php artisan migrate:refresh --seed

39 - Listando imagens de produtos

40 - Serializando endereco da imagem
       - php artisan make:resource ProductPhotoResource

41 - Entendendo storage publico e privado
       - php artisan storage:link

42 - Resource Collection
       - php artisan make:resource ProductPhotoCollection --collection

43 - Construindo upload de imagens

44 - Testando upload de imagens
       - php artisan make:request ProductPhotoRequest

45 - Database Transections

46 - Atualizar imagem

Exclusão lógica
47 - Iniciando com exclusão lógica
        - php artisan make:migration add_soft_deletes_products_table --table=products
        - php artisan migrate

48 - Exclusão da imagem

49 - Integrando exclusão lógica

50 - Exclusão lógica em relacionamentos

51 - Restauração de produtos

Administração de usuários
52 - Criando usuários falsos
        - php artisan make:seeder UsersTableSeeder
        - php artisan migrate:refresh --seed

53 - Listando os usuários
        - php artisan make:controller Api/UsersController --resource
        - php artisan make:resource UserResource

54 - Criando um usuário
        - php artisan make:request UserRequest

55 - Regra para unicidade de usuários

56 - Atualizando usuários

57 - Removendo usuarios
         - php artisan make:migration add_soft_deletes_users_table --table=users
         - php artisan migrate

58 - Criando eventos personalizados
         - php artisan event:generate

59 - Resetando senha
         - pha artisan make:notification MyResetPassword
         - php artisan make:auth
         - php artisan vendor:publish --tag=laravel-notifications

60 - Integrando JWT
         - composer require tymon/jwt-auth:dev-develop#481c67b0d95ad14c3f3690bb6ec2a285c2f1ab1b
         - php artisan jwt:secret
         - php artisan vendor:publish --provider="Tymon\JWTAuth\Providers\LaravelServiceProvider"

61 - Sujeito do token

62 - Gerando token JWT
         - php artisan make:controller Api/AuthController

63 - Protegendo a API

64 - Logout - Invalidando tokens

65 - Pegando usuario logado

66 - Refresh token

67 - Auto refresh token

Aplicação Web Angular
68 - Gerando aplicação angular
          - npm install -g @angular/cli@6
          - ng new angular-app
          - renomear para _angular-app

69 - Integração do Bootstrap
          - npm install bootstrap --save
          - npm install jquery popper.js --save

70 - Criado componente de Login
          - ng g c login

71 - Criando a primeira requisição ajax para a API

72 - Configuração dos Cors

73 - Iniciando com SPA
          - ng g c category/category-list

74 - Listando categorias no componentes

75 - Criando events personalizados para o componete de alert
           -npm install @fortawesome/fontawesome-free-webfonts
           -ng g c bootstrap/alert-error

76 - Criando cadastro de categorias
           - ng g c bootstrap/modal
